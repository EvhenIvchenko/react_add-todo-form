{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","services/findUsedById.js","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","nextId","Math","max","todosFromServer","map","selectedTodo","users","find","findUsedById","cn","TodoList","todos","App","initialTodo","useState","wasSubmitted","setWasSubmitted","setTodos","newTodo","setNewTodo","hasTitleError","hasUserError","action","method","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","length","Number","disabled","selected","usersFromServer","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8b159de.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User | undefined;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { findUsedById } from '../../services/findUsedById';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport todosFromServer from '../../api/todos';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const maxId = Math.max(...todosFromServer\n    .map(selectedTodo => selectedTodo.id));\n\n  const nextId = maxId + 1;\n  const user = findUsedById(todo);\n\n  return (\n    <article\n      data-id={nextId}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n      key={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import users from '../api/users';\n\nexport const findUsedById = (todo) => {\n  return users.find((user) => user.id === todo.userId);\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      )))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const initialTodo = {\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n  };\n\n  const [wasSubmitted, setWasSubmitted] = useState(false);\n  const [todos, setTodos] = useState(todosFromServer);\n  const [newTodo, setNewTodo] = useState(initialTodo);\n\n  const hasTitleError = wasSubmitted && newTodo.title === '';\n  const hasUserError = wasSubmitted && newTodo.userId === 0;\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (hasTitleError || hasUserError) {\n      return;\n    }\n\n    setTodos([...todos, newTodo]);\n    setNewTodo(initialTodo);\n    setWasSubmitted(false);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTodo({\n      ...newTodo,\n      title: event.target.value,\n      id: todos.length + 1,\n    });\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setNewTodo({\n      ...newTodo,\n      userId: Number(event.target.value),\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            className=\"input\"\n            placeholder=\"Enter a title\"\n            value={newTodo.title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            className=\"input\"\n            onChange={handleUserChange}\n            value={newTodo.userId}\n          >\n            <option\n              value={0}\n              disabled\n              selected\n            >\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => {\n              return (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              );\n            })}\n          </select>\n          {hasUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button button--primary\"\n          onClick={() => setWasSubmitted(true)}\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}